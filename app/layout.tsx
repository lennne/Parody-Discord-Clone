import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ClerkProvider } from "@clerk/nextjs";
import React from "react";
import { ThemeProvider } from "@/components/providers/theme-provider";
import { ModeToggle } from "@/components/mode-toggle";
import { cn } from "@/lib/utils";
import { ModalProvider } from '@/components/providers/modal-provider';
import { SocketProvider } from "@/components/providers/socket-provider";
import { QueryProvider } from "@/components/providers/query-provider";


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Team Chat Application",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode; }>) {
  return (
    <ClerkProvider>
      <html lang="en" suppressHydrationWarning> 
        <body className={cn( /* added cn to contain multiple classnames */
          `${geistSans.variable} ${geistMono.variable} antialiased`, 
          "bg-white dark:bg-[#313338]" /* if light mode, bg-white but if darkmode dark:bg-[#313338] */
        )}>
          <ThemeProvider /* This component is derived from components/providers/theme-provider.tsx */
          attribute={"class"}
          defaultTheme={"dark"} /* the default theme */
          enableSystem={false}
          storageKey="discord-theme"/* key to store your theme value */
          >
          <SocketProvider>
            <ModalProvider />
              <QueryProvider> 
                  {children}
              </QueryProvider>
          </SocketProvider>
          </ThemeProvider>
        </body>
      </html>
    </ClerkProvider>







  );
}
